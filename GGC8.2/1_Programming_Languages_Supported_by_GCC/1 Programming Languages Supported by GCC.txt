
source url:https://gcc.gnu.org/onlinedocs/gcc-8.2.0/gcc/G_002b_002b-and-GCC.html#G_002b_002b-and-GCC

1 GCC支持的编程语言
 GCC 代表 "GNU Compiler Collection". GCC 是几种主要语言的完全开发的编译器。这些语言包括 C C++ Objective-C, Objective-C++, Fortran, Ada, Go, 和 BRIG (HSAIL).
 GCC 的缩写有不同的含义, 目前官方的含义是"GNU Compiler Collection", 通常指的是整套编译套件. 通常代表 GNU C 编译器, 当编译C语言时,用法相同。最后, 这个词在GCC语言无关性时会被使用: 所有支持的语言,共享编译器代码。
 语言无关性包括大部分优化器, 和大部分机器生成的机器码的后端一样。
 特定语言的编译器被称为"前端", 除了GCC组件之外, 仍然后部分其他前端分别在维护, 支持他们的语言包括 Pascal,Msrcury, COBOL.如果想要使用他们, 则必须和GCC一起构建。
 大部分C语言编译器都有自己的名字。 C++编译器叫做G++, Ada 编译器是GNAT,等。当我们谈论一种语言的编译的时候, 我们可能通过GCC或者他们的名字来代指编译器。
 纵观历史,大多数语言的编译器,包括C++和Fortran, 都实现了"预编译器",用来生成另外一种高级语言比如C语言。GCC编译器包括GCC都没有这样实现,他们直接生成机器码. 不能将这样的预处理器与C预处理器混淆.后者是C，C ++，Objective-C和Objective-C ++语言的一个不可或缺的特性。
